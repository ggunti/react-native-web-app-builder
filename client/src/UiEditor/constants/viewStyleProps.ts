import { Prop } from '../../types';

export const viewStyleProps: Record<string, Prop> = {
  backgroundColor: {
    name: 'Background color',
    optional: true,
    value: undefined,
    shownValue: '#ffffff',
    oldValue: '#ffffff',
    oldShownValue: '#ffffff',
    renderType: 'string',
    selectorType: 'colorPicker',
    selectorProps: {},
  },
  borderWidth: {
    name: 'Border width',
    optional: true,
    value: undefined,
    shownValue: 1,
    oldValue: 1,
    oldShownValue: 1,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 30,
    },
  },
  borderStyle: {
    name: 'Border style',
    optional: true,
    value: undefined,
    shownValue: 'solid',
    oldValue: 'solid',
    oldShownValue: 'solid',
    renderType: 'string',
    selectorType: 'dropDown',
    selectorProps: {
      options: [
        { value: 'solid', label: 'Solid' },
        { value: 'dotted', label: 'Dotted' },
        { value: 'dashed', label: 'Dashed' },
      ],
    },
  },
  borderColor: {
    name: 'Border color',
    optional: true,
    value: undefined,
    shownValue: '#000000',
    oldValue: '#000000',
    oldShownValue: '#000000',
    renderType: 'string',
    selectorType: 'colorPicker',
    selectorProps: {},
  },
  borderRadius: {
    name: 'Border radius',
    optional: true,
    value: undefined,
    shownValue: 5,
    oldValue: 5,
    oldShownValue: 5,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 100,
    },
  },
  opacity: {
    name: 'Opacity',
    optional: true,
    value: undefined,
    shownValue: 0.5,
    oldValue: 0.5,
    oldShownValue: 0.5,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 0.01,
      minimumValue: 0,
      maximumValue: 1,
    },
  },
  borderTopWidth: {
    name: 'Border top width',
    optional: true,
    value: undefined,
    shownValue: 1,
    oldValue: 1,
    oldShownValue: 1,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 30,
    },
  },
  borderLeftWidth: {
    name: 'Border left width',
    optional: true,
    value: undefined,
    shownValue: 1,
    oldValue: 1,
    oldShownValue: 1,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 30,
    },
  },
  borderBottomWidth: {
    name: 'Border bottom width',
    optional: true,
    value: undefined,
    shownValue: 1,
    oldValue: 1,
    oldShownValue: 1,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 30,
    },
  },
  borderRightWidth: {
    name: 'Border right width',
    optional: true,
    value: undefined,
    shownValue: 1,
    oldValue: 1,
    oldShownValue: 1,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 30,
    },
  },
  borderTopColor: {
    name: 'Border top color',
    optional: true,
    value: undefined,
    shownValue: '#000000',
    oldValue: '#000000',
    oldShownValue: '#000000',
    renderType: 'string',
    selectorType: 'colorPicker',
    selectorProps: {},
  },
  borderLeftColor: {
    name: 'Border left color',
    optional: true,
    value: undefined,
    shownValue: '#000000',
    oldValue: '#000000',
    oldShownValue: '#000000',
    renderType: 'string',
    selectorType: 'colorPicker',
    selectorProps: {},
  },
  borderBottomColor: {
    name: 'Border bottom color',
    optional: true,
    value: undefined,
    shownValue: '#000000',
    oldValue: '#000000',
    oldShownValue: '#000000',
    renderType: 'string',
    selectorType: 'colorPicker',
    selectorProps: {},
  },
  borderRightColor: {
    name: 'Border right color',
    optional: true,
    value: undefined,
    shownValue: '#000000',
    oldValue: '#000000',
    oldShownValue: '#000000',
    renderType: 'string',
    selectorType: 'colorPicker',
    selectorProps: {},
  },
  borderTopLeftRadius: {
    name: 'Border top left radius',
    optional: true,
    value: undefined,
    shownValue: 5,
    oldValue: 5,
    oldShownValue: 5,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 100,
    },
  },
  borderBottomLeftRadius: {
    name: 'Border bottom left radius',
    optional: true,
    value: undefined,
    shownValue: 5,
    oldValue: 5,
    oldShownValue: 5,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 100,
    },
  },
  borderBottomRightRadius: {
    name: 'Border bottom right radius',
    optional: true,
    value: undefined,
    shownValue: 5,
    oldValue: 5,
    oldShownValue: 5,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 100,
    },
  },
  borderTopRightRadius: {
    name: 'Border top right radius',
    optional: true,
    value: undefined,
    shownValue: 5,
    oldValue: 5,
    oldShownValue: 5,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 100,
    },
  },
  backfaceVisibility: {
    name: 'Backface visibility',
    optional: true,
    value: undefined,
    shownValue: 'visible',
    oldValue: 'visible',
    oldShownValue: 'visible',
    renderType: 'string',
    selectorType: 'dropDown',
    selectorProps: {
      options: [
        { value: 'visible', label: 'Visible' },
        { value: 'hidden', label: 'Hidden' },
      ],
    },
  },
  // android only
  elevation: {
    name: 'Elevation',
    optional: true,
    value: undefined,
    shownValue: 1,
    oldValue: 1,
    oldShownValue: 1,
    renderType: 'number',
    selectorType: 'slider',
    selectorProps: {
      step: 1,
      minimumValue: 0,
      maximumValue: 30,
    },
  },
};
